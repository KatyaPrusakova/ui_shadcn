version: '3.4'

services:
  backend:
    container_name: backend
    image: backend
    build:
      context: backend/
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7-alpine
    command: redis-server
    ports:
      - 6379:6379
    networks:
      - app-network


  db:
    image: postgres:15-alpine
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: dev_db

  frontend:
    container_name: frontend
    build:
        context: ./frontend
        dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    ports:
      - 3000:3000
    networks:
      - app-network

volumes:
  dev_postgres_data:

networks:
  app-network:
    driver: bridge